BasisDirectory[gr0] = StringDrop[DirectoryName[$Input], -1]
gr0 /: BasisSectors[gr0] := {js[gr0, 1, 1, 1, 0, 0, 0, 0], 
   js[gr0, 1, 1, 1, 0, 1, 0, 0], js[gr0, 1, 1, 1, 1, 0, 0, 0]}
gr0 /: CurrentState[gr0] := <|NewDsBasis -> True, GenerateIBP -> True, 
   AnalyzeSectors -> True, FindSymmetries -> False|>
gr0 /: CutDs[gr0] := {0, 0, 0, 0, 0, 0, 0}
gr0 /: Definitions[gr0] := {Hold[MetricTensor[] === d, SetDim[d]], 
   Hold[VecQ[l1], Declare[l1, Vector]], Hold[VecQ[l2], Declare[l2, Vector]], 
   Hold[VecQ[p4], Declare[p4, Vector]], Hold[VecQ[q1], Declare[q1, Vector]], 
   Hold[TypeOf[p4] === Vector, Declare[p4, Vector]], 
   Hold[TypeOf[pv] === Number, Declare[pv, Number]], 
   Hold[TypeOf[q1] === Vector, Declare[q1, Vector]], 
   Hold[TypeOf[qq] === Number, Declare[qq, Number]], 
   Hold[sp[p4, p4] === pv, sp[p4, p4] = pv], Hold[sp[q1, q1] === qq, 
    sp[q1, q1] = qq], Hold[sp[p4, q1] === 0, sp[p4, q1] = 0]}
gr0 /: Ds[gr0] := {sp[l1, l1], sp[l2, l2], qq + sp[l1, l1] + 2*sp[l1, l2] - 
    2*sp[l1, q1] + sp[l2, l2] - 2*sp[l2, q1], sp[l1, p4], sp[l2, p4], 
   sp[l1, q1], sp[l2, q1]}
gr0 /: DsBasisQ[gr0] := True
gr0 /: EMs[gr0] := {p4, q1}
gr0 /: ExtMappedSectors[gr0] := {}
gr0 /: ExtSectorsMappings[gr0] := {}
gr0 /: IBP[gr0] := {-(#3*j[gr0, -1 + #1, #2, 1 + #3, #4, #5, #6, #7]) + 
     #3*j[gr0, #1, -1 + #2, 1 + #3, #4, #5, #6, #7] + 
     (d - 2*#1 - #3 - #4 - #6)*j[gr0, #1, #2, #3, #4, #5, #6, #7] - 
     2*#3*j[gr0, #1, #2, 1 + #3, #4, #5, #6, -1 + #7] + 
     #3*qq*j[gr0, #1, #2, 1 + #3, #4, #5, #6, #7], 
    -(#3*j[gr0, -1 + #1, #2, 1 + #3, #4, #5, #6, #7]) + 
     #2*j[gr0, -1 + #1, 1 + #2, #3, #4, #5, #6, #7] + 
     #3*j[gr0, #1, -1 + #2, 1 + #3, #4, #5, #6, #7] - 
     #5*j[gr0, #1, #2, #3, -1 + #4, 1 + #5, #6, #7] - 
     #7*j[gr0, #1, #2, #3, #4, #5, -1 + #6, 1 + #7] + 
     (#2 - #3)*j[gr0, #1, #2, #3, #4, #5, #6, #7] - 
     2*#3*j[gr0, #1, #2, 1 + #3, #4, #5, #6, -1 + #7] + 
     #3*qq*j[gr0, #1, #2, 1 + #3, #4, #5, #6, #7] - 
     #2*j[gr0, #1, 1 + #2, -1 + #3, #4, #5, #6, #7] - 
     2*#2*j[gr0, #1, 1 + #2, #3, #4, #5, -1 + #6, #7] - 
     2*#2*j[gr0, #1, 1 + #2, #3, #4, #5, #6, -1 + #7] + 
     #2*qq*j[gr0, #1, 1 + #2, #3, #4, #5, #6, #7], 
    #3*j[gr0, -1 + #1, #2, 1 + #3, #4, #5, #6, #7] - 
     #3*j[gr0, #1, -1 + #2, 1 + #3, #4, #5, #6, #7] + 
     (#1 - #3)*j[gr0, #1, #2, #3, #4, #5, #6, #7] - 
     #6*j[gr0, #1, #2, #3, #4, #5, 1 + #6, -1 + #7] - 
     #4*j[gr0, #1, #2, #3, 1 + #4, -1 + #5, #6, #7] - 
     2*#3*j[gr0, #1, #2, 1 + #3, #4, #5, -1 + #6, #7] + 
     #3*qq*j[gr0, #1, #2, 1 + #3, #4, #5, #6, #7] + 
     #1*j[gr0, 1 + #1, -1 + #2, #3, #4, #5, #6, #7] - 
     #1*j[gr0, 1 + #1, #2, -1 + #3, #4, #5, #6, #7] - 
     2*#1*j[gr0, 1 + #1, #2, #3, #4, #5, -1 + #6, #7] - 
     2*#1*j[gr0, 1 + #1, #2, #3, #4, #5, #6, -1 + #7] + 
     #1*qq*j[gr0, 1 + #1, #2, #3, #4, #5, #6, #7], 
    #3*j[gr0, -1 + #1, #2, 1 + #3, #4, #5, #6, #7] - 
     #3*j[gr0, #1, -1 + #2, 1 + #3, #4, #5, #6, #7] + 
     (d - 2*#2 - #3 - #5 - #7)*j[gr0, #1, #2, #3, #4, #5, #6, #7] - 
     2*#3*j[gr0, #1, #2, 1 + #3, #4, #5, -1 + #6, #7] + 
     #3*qq*j[gr0, #1, #2, 1 + #3, #4, #5, #6, #7], 
    -(#4*pv*j[gr0, #1, #2, #3, 1 + #4, #5, #6, #7]) - 
     2*#3*j[gr0, #1, #2, 1 + #3, -1 + #4, #5, #6, #7] - 
     2*#3*j[gr0, #1, #2, 1 + #3, #4, -1 + #5, #6, #7] - 
     2*#1*j[gr0, 1 + #1, #2, #3, -1 + #4, #5, #6, #7], 
    -(#5*pv*j[gr0, #1, #2, #3, #4, 1 + #5, #6, #7]) - 
     2*#3*j[gr0, #1, #2, 1 + #3, -1 + #4, #5, #6, #7] - 
     2*#3*j[gr0, #1, #2, 1 + #3, #4, -1 + #5, #6, #7] - 
     2*#2*j[gr0, #1, 1 + #2, #3, #4, -1 + #5, #6, #7], 
    -(#6*qq*j[gr0, #1, #2, #3, #4, #5, 1 + #6, #7]) - 
     2*#3*j[gr0, #1, #2, 1 + #3, #4, #5, -1 + #6, #7] - 
     2*#3*j[gr0, #1, #2, 1 + #3, #4, #5, #6, -1 + #7] + 
     2*#3*qq*j[gr0, #1, #2, 1 + #3, #4, #5, #6, #7] - 
     2*#1*j[gr0, 1 + #1, #2, #3, #4, #5, -1 + #6, #7], 
    -(#7*qq*j[gr0, #1, #2, #3, #4, #5, #6, 1 + #7]) - 
     2*#3*j[gr0, #1, #2, 1 + #3, #4, #5, -1 + #6, #7] - 
     2*#3*j[gr0, #1, #2, 1 + #3, #4, #5, #6, -1 + #7] + 
     2*#3*qq*j[gr0, #1, #2, 1 + #3, #4, #5, #6, #7] - 
     2*#2*j[gr0, #1, 1 + #2, #3, #4, #5, #6, -1 + #7]} & 
gr0 /: Information[gr0] := (If[ValueQ[gr0::usage], 
    Information[gr0, LongForm -> False]]; 
   Print[Grid[Partition[Union[Replace[Replace[First /@ UpValues[gr0] /. 
          HoldPattern -> HoldForm, 
         {HoldPattern[HoldForm[(LiteRed`Private`f$_)[gr0, __]]] :> 
           HoldForm[LiteRed`Private`f$[gr0, "\[Ellipsis]"]]}, {1}], 
        {HoldPattern[LiteRed`Private`x$:HoldForm[(LiteRed`Private`f$_)[gr0, 
              ___]]] :> Button[LiteRed`Private`x$, 
           (SelectionMove[ButtonNotebook[], All, GeneratedCell]; 
             NotebookDelete[]; Information[Evaluate[LiteRed`Private`x$[[1,
                0]]], LongForm -> False]; Print[TableForm[Cases[UpValues[
                  gr0], HoldPattern[LiteRed`Private`a$_ :> 
                    LiteRed`Private`b$_] /; MatchQ[LiteRed`Private`a$[[1,0]], 
                   LiteRed`Private`x$[[1,0]]]] /. HoldPattern -> 
                 HoldForm]]) & , Appearance -> "Frameless", 
           BaseStyle -> "InformationLink"]}, {1}]], 5], 
     DefaultBaseStyle -> "InfoGrid"]])
gr0 /: jRules[gr0, 1, 1, 1, 0, 0, 0, 0] := 
  Get[StringJoin[BasisDirectory[gr0], "/jRules[gr0, 1, 1, 1, 0, 0, 0, 0]"]]
gr0 /: jRules[gr0, 1, 1, 1, 0, 1, 0, 0] := 
  Get[StringJoin[BasisDirectory[gr0], "/jRules[gr0, 1, 1, 1, 0, 1, 0, 0]"]]
gr0 /: jRules[gr0, 1, 1, 1, 1, 0, 0, 0] := 
  {j[gr0, (n1_)?Positive, (n2_)?Positive, (n3_)?Positive, (n4_)?Positive, 
     (n5_)?NonPositive, (n6_)?NonPositive, (n7_)?NonPositive] :> 
    Expand[j[gr0, n2, n1, n3, n5, n4, n7, n6]]}
gr0 /: jRules[gr0, 1, 1, 1, 1, 1, 0, 0] := 
  Get[StringJoin[BasisDirectory[gr0], "/jRules[gr0, 1, 1, 1, 1, 1, 0, 0]"]]
gr0 /: jsOrder[gr0] := {"np", "cp", "-ds", "-ns"}
gr0 /: jsOrder[gr0, 0, 1, 1, 0, 0, 0, 0] := {{-1, 1, 1, -1, -1, -1, -1}, 
   {-1, 0, 0, -1, -1, -1, -1}, {0, -1, 0, 0, 0, 0, 0}, {1, 0, 0, 0, 0, 0, 0}, 
   {0, 0, 0, 1, 0, 0, 0}, {0, 0, 0, 0, 1, 0, 0}, {0, 0, 0, 0, 0, 1, 0}}
gr0 /: jsOrder[gr0, 0, 1, 1, 0, 1, 0, 0] := {{-1, 1, 1, -1, 1, -1, -1}, 
   {-1, 0, 0, -1, 0, -1, -1}, {0, -1, 0, 0, 0, 0, 0}, {0, 0, -1, 0, 0, 0, 0}, 
   {1, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 1, 0, 0, 0}, {0, 0, 0, 0, 0, 1, 0}}
gr0 /: jsOrder[gr0, 0, 1, 1, 1, 1, 0, 0] := {{-1, 1, 1, 1, 1, -1, -1}, 
   {-1, 0, 0, 0, 0, -1, -1}, {0, -1, 0, 0, 0, 0, 0}, {0, 0, -1, 0, 0, 0, 0}, 
   {0, 0, 0, -1, 0, 0, 0}, {1, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 1, 0}}
gr0 /: jsOrder[gr0, 1, 0, 1, 0, 0, 0, 0] := {{1, -1, 1, -1, -1, -1, -1}, 
   {0, -1, 0, -1, -1, -1, -1}, {-1, 0, 0, 0, 0, 0, 0}, {0, 1, 0, 0, 0, 0, 0}, 
   {0, 0, 0, 1, 0, 0, 0}, {0, 0, 0, 0, 1, 0, 0}, {0, 0, 0, 0, 0, 1, 0}}
gr0 /: jsOrder[gr0, 1, 0, 1, 0, 1, 0, 0] := {{1, -1, 1, -1, 1, -1, -1}, 
   {0, -1, 0, -1, 0, -1, -1}, {-1, 0, 0, 0, 0, 0, 0}, {0, 0, -1, 0, 0, 0, 0}, 
   {0, 1, 0, 0, 0, 0, 0}, {0, 0, 0, 1, 0, 0, 0}, {0, 0, 0, 0, 0, 1, 0}}
gr0 /: jsOrder[gr0, 1, 0, 1, 1, 1, 0, 0] := {{1, -1, 1, 1, 1, -1, -1}, 
   {0, -1, 0, 0, 0, -1, -1}, {-1, 0, 0, 0, 0, 0, 0}, {0, 0, -1, 0, 0, 0, 0}, 
   {0, 0, 0, -1, 0, 0, 0}, {0, 1, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 1, 0}}
gr0 /: jsOrder[gr0, 1, 1, 0, 0, 0, 0, 0] := {{1, 1, -1, -1, -1, -1, -1}, 
   {0, 0, -1, -1, -1, -1, -1}, {-1, 0, 0, 0, 0, 0, 0}, {0, 0, 1, 0, 0, 0, 0}, 
   {0, 0, 0, 1, 0, 0, 0}, {0, 0, 0, 0, 1, 0, 0}, {0, 0, 0, 0, 0, 1, 0}}
gr0 /: jsOrder[gr0, 1, 1, 0, 0, 1, 0, 0] := {{1, 1, -1, -1, 1, -1, -1}, 
   {0, 0, -1, -1, 0, -1, -1}, {-1, 0, 0, 0, 0, 0, 0}, {0, -1, 0, 0, 0, 0, 0}, 
   {0, 0, 1, 0, 0, 0, 0}, {0, 0, 0, 1, 0, 0, 0}, {0, 0, 0, 0, 0, 1, 0}}
gr0 /: jsOrder[gr0, 1, 1, 0, 1, 1, 0, 0] := {{1, 1, -1, 1, 1, -1, -1}, 
   {0, 0, -1, 0, 0, -1, -1}, {-1, 0, 0, 0, 0, 0, 0}, {0, -1, 0, 0, 0, 0, 0}, 
   {0, 0, 0, -1, 0, 0, 0}, {0, 0, 1, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 1, 0}}
gr0 /: jsOrder[gr0, 1, 1, 1, 0, 0, 0, 0] := {{1, 1, 1, -1, -1, -1, -1}, 
   {0, 0, 0, -1, -1, -1, -1}, {-1, 0, 0, 0, 0, 0, 0}, {0, -1, 0, 0, 0, 0, 0}, 
   {0, 0, 0, 1, 0, 0, 0}, {0, 0, 0, 0, 1, 0, 0}, {0, 0, 0, 0, 0, 1, 0}}
gr0 /: jsOrder[gr0, 1, 1, 1, 0, 1, 0, 0] := {{1, 1, 1, -1, 1, -1, -1}, 
   {0, 0, 0, -1, 0, -1, -1}, {-1, 0, 0, 0, 0, 0, 0}, {0, -1, 0, 0, 0, 0, 0}, 
   {0, 0, -1, 0, 0, 0, 0}, {0, 0, 0, 1, 0, 0, 0}, {0, 0, 0, 0, 0, 1, 0}}
gr0 /: jsOrder[gr0, 1, 1, 1, 1, 0, 0, 0] := {{1, 1, 1, 1, -1, -1, -1}, 
   {0, 0, 0, 0, -1, -1, -1}, {-1, 0, 0, 0, 0, 0, 0}, {0, -1, 0, 0, 0, 0, 0}, 
   {0, 0, -1, 0, 0, 0, 0}, {0, 0, 0, 0, 1, 0, 0}, {0, 0, 0, 0, 0, 1, 0}}
gr0 /: jsOrder[gr0, 1, 1, 1, 1, 1, 0, 0] := {{1, 1, 1, 1, 1, -1, -1}, 
   {0, 0, 0, 0, 0, -1, -1}, {-1, 0, 0, 0, 0, 0, 0}, {0, -1, 0, 0, 0, 0, 0}, 
   {0, 0, -1, 0, 0, 0, 0}, {0, 0, 0, -1, 0, 0, 0}, {0, 0, 0, 0, 0, 1, 0}}
gr0 /: jSymmetries[gr0, 1, 1, 1, 0, 0, 0, 0] := 
  {{j[gr0, (n1_)?Positive, (n2_)?Positive, (n3_)?Positive, (n4_)?NonPositive, 
      (n5_)?NonPositive, (n6_)?NonPositive, (n7_)?NonPositive] :> 
     Expand[j[gr0, n1, n2, n3, n4, n5, n6, n7]]}, 
   {j[gr0, (n1_)?Positive, (n2_)?Positive, (n3_)?Positive, (n4_)?NonPositive, 
      (n5_)?NonPositive, (n6_)?NonPositive, (n7_)?NonPositive] :> 
     Expand[j[gr0, n1, n2, n3, 0, 0, n6, n7]/((-j[gr0, 0, 0, 0, -1, 0, 0, 0])^
         n4*(-j[gr0, 0, 0, 0, 0, -1, 0, 0])^n5)]}, 
   {j[gr0, (n1_)?Positive, (n2_)?Positive, (n3_)?Positive, (n4_)?NonPositive, 
      (n5_)?NonPositive, (n6_)?NonPositive, (n7_)?NonPositive] :> 
     Expand[j[gr0, n1, n3, n2, n4, 0, n6, 0]/
       ((-j[gr0, 0, 0, 0, -1, 0, 0, 0] - j[gr0, 0, 0, 0, 0, -1, 0, 0])^n5*
        (-j[gr0, 0, 0, 0, 0, 0, -1, 0] - j[gr0, 0, 0, 0, 0, 0, 0, -1] + 
          qq*j[gr0, 0, 0, 0, 0, 0, 0, 0])^n7)]}, 
   {j[gr0, (n1_)?Positive, (n2_)?Positive, (n3_)?Positive, (n4_)?NonPositive, 
      (n5_)?NonPositive, (n6_)?NonPositive, (n7_)?NonPositive] :> 
     Expand[j[gr0, n1, n3, n2, 0, 0, n6, 0]/((-j[gr0, 0, 0, 0, -1, 0, 0, 0])^
         n4*(j[gr0, 0, 0, 0, -1, 0, 0, 0] + j[gr0, 0, 0, 0, 0, -1, 0, 0])^n5*
        (-j[gr0, 0, 0, 0, 0, 0, -1, 0] - j[gr0, 0, 0, 0, 0, 0, 0, -1] + 
          qq*j[gr0, 0, 0, 0, 0, 0, 0, 0])^n7)]}, 
   {j[gr0, (n1_)?Positive, (n2_)?Positive, (n3_)?Positive, (n4_)?NonPositive, 
      (n5_)?NonPositive, (n6_)?NonPositive, (n7_)?NonPositive] :> 
     Expand[j[gr0, n2, n1, n3, n5, n4, n7, n6]]}, 
   {j[gr0, (n1_)?Positive, (n2_)?Positive, (n3_)?Positive, (n4_)?NonPositive, 
      (n5_)?NonPositive, (n6_)?NonPositive, (n7_)?NonPositive] :> 
     Expand[j[gr0, n2, n1, n3, 0, 0, n7, n6]/((-j[gr0, 0, 0, 0, -1, 0, 0, 0])^
         n5*(-j[gr0, 0, 0, 0, 0, -1, 0, 0])^n4)]}, 
   {j[gr0, (n1_)?Positive, (n2_)?Positive, (n3_)?Positive, (n4_)?NonPositive, 
      (n5_)?NonPositive, (n6_)?NonPositive, (n7_)?NonPositive] :> 
     Expand[j[gr0, n2, n3, n1, 0, 0, n7, 0]/((-j[gr0, 0, 0, 0, -1, 0, 0, 0])^
         n5*(j[gr0, 0, 0, 0, -1, 0, 0, 0] + j[gr0, 0, 0, 0, 0, -1, 0, 0])^n4*
        (-j[gr0, 0, 0, 0, 0, 0, -1, 0] - j[gr0, 0, 0, 0, 0, 0, 0, -1] + 
          qq*j[gr0, 0, 0, 0, 0, 0, 0, 0])^n6)]}, 
   {j[gr0, (n1_)?Positive, (n2_)?Positive, (n3_)?Positive, (n4_)?NonPositive, 
      (n5_)?NonPositive, (n6_)?NonPositive, (n7_)?NonPositive] :> 
     Expand[j[gr0, n2, n3, n1, n5, 0, n7, 0]/
       ((-j[gr0, 0, 0, 0, -1, 0, 0, 0] - j[gr0, 0, 0, 0, 0, -1, 0, 0])^n4*
        (-j[gr0, 0, 0, 0, 0, 0, -1, 0] - j[gr0, 0, 0, 0, 0, 0, 0, -1] + 
          qq*j[gr0, 0, 0, 0, 0, 0, 0, 0])^n6)]}, 
   {j[gr0, (n1_)?Positive, (n2_)?Positive, (n3_)?Positive, (n4_)?NonPositive, 
      (n5_)?NonPositive, (n6_)?NonPositive, (n7_)?NonPositive] :> 
     Expand[j[gr0, n3, n1, n2, 0, n4, 0, n6]/
       ((-j[gr0, 0, 0, 0, -1, 0, 0, 0] - j[gr0, 0, 0, 0, 0, -1, 0, 0])^n5*
        (-j[gr0, 0, 0, 0, 0, 0, -1, 0] - j[gr0, 0, 0, 0, 0, 0, 0, -1] + 
          qq*j[gr0, 0, 0, 0, 0, 0, 0, 0])^n7)]}, 
   {j[gr0, (n1_)?Positive, (n2_)?Positive, (n3_)?Positive, (n4_)?NonPositive, 
      (n5_)?NonPositive, (n6_)?NonPositive, (n7_)?NonPositive] :> 
     Expand[j[gr0, n3, n1, n2, 0, 0, 0, n6]/((-j[gr0, 0, 0, 0, 0, -1, 0, 0])^
         n4*(j[gr0, 0, 0, 0, -1, 0, 0, 0] + j[gr0, 0, 0, 0, 0, -1, 0, 0])^n5*
        (-j[gr0, 0, 0, 0, 0, 0, -1, 0] - j[gr0, 0, 0, 0, 0, 0, 0, -1] + 
          qq*j[gr0, 0, 0, 0, 0, 0, 0, 0])^n7)]}, 
   {j[gr0, (n1_)?Positive, (n2_)?Positive, (n3_)?Positive, (n4_)?NonPositive, 
      (n5_)?NonPositive, (n6_)?NonPositive, (n7_)?NonPositive] :> 
     Expand[j[gr0, n3, n2, n1, 0, 0, 0, n7]/((-j[gr0, 0, 0, 0, 0, -1, 0, 0])^
         n5*(j[gr0, 0, 0, 0, -1, 0, 0, 0] + j[gr0, 0, 0, 0, 0, -1, 0, 0])^n4*
        (-j[gr0, 0, 0, 0, 0, 0, -1, 0] - j[gr0, 0, 0, 0, 0, 0, 0, -1] + 
          qq*j[gr0, 0, 0, 0, 0, 0, 0, 0])^n6)]}, 
   {j[gr0, (n1_)?Positive, (n2_)?Positive, (n3_)?Positive, (n4_)?NonPositive, 
      (n5_)?NonPositive, (n6_)?NonPositive, (n7_)?NonPositive] :> 
     Expand[j[gr0, n3, n2, n1, 0, n5, 0, n7]/
       ((-j[gr0, 0, 0, 0, -1, 0, 0, 0] - j[gr0, 0, 0, 0, 0, -1, 0, 0])^n4*
        (-j[gr0, 0, 0, 0, 0, 0, -1, 0] - j[gr0, 0, 0, 0, 0, 0, 0, -1] + 
          qq*j[gr0, 0, 0, 0, 0, 0, 0, 0])^n6)]}}
gr0 /: jSymmetries[gr0, 1, 1, 1, 0, 1, 0, 0] := 
  {{j[gr0, (n1_)?Positive, (n2_)?Positive, (n3_)?Positive, (n4_)?NonPositive, 
      (n5_)?Positive, (n6_)?NonPositive, (n7_)?NonPositive] :> 
     Expand[j[gr0, n1, n2, n3, n4, n5, n6, n7]]}, 
   {j[gr0, (n1_)?Positive, (n2_)?Positive, (n3_)?Positive, (n4_)?NonPositive, 
      (n5_)?Positive, (n6_)?NonPositive, (n7_)?NonPositive] :> 
     Expand[j[gr0, n3, n2, n1, 0, n5, 0, n7]/
       ((-j[gr0, 0, 0, 0, -1, 0, 0, 0] - j[gr0, 0, 0, 0, 0, -1, 0, 0])^n4*
        (-j[gr0, 0, 0, 0, 0, 0, -1, 0] - j[gr0, 0, 0, 0, 0, 0, 0, -1] + 
          qq*j[gr0, 0, 0, 0, 0, 0, 0, 0])^n6)]}}
gr0 /: jSymmetries[gr0, 1, 1, 1, 1, 1, 0, 0] := 
  {{j[gr0, (n1_)?Positive, (n2_)?Positive, (n3_)?Positive, (n4_)?Positive, 
      (n5_)?Positive, (n6_)?NonPositive, (n7_)?NonPositive] :> 
     Expand[j[gr0, n1, n2, n3, n4, n5, n6, n7]]}, 
   {j[gr0, (n1_)?Positive, (n2_)?Positive, (n3_)?Positive, (n4_)?Positive, 
      (n5_)?Positive, (n6_)?NonPositive, (n7_)?NonPositive] :> 
     Expand[j[gr0, n2, n1, n3, n5, n4, n7, n6]]}}
gr0 /: LI[gr0] := {#6*qq*j[gr0, #1, #2, #3, -1 + #4, #5, 1 + #6, #7] + 
     #7*qq*j[gr0, #1, #2, #3, #4, -1 + #5, #6, 1 + #7] - 
     #5*pv*j[gr0, #1, #2, #3, #4, 1 + #5, #6, -1 + #7] - 
     #4*pv*j[gr0, #1, #2, #3, 1 + #4, #5, -1 + #6, #7] - 
     2*#3*qq*j[gr0, #1, #2, 1 + #3, -1 + #4, #5, #6, #7] - 
     2*#3*qq*j[gr0, #1, #2, 1 + #3, #4, -1 + #5, #6, #7]} & 
gr0 /: LMs[gr0] := {l1, l2}
gr0 /: MappedSectors[gr0] := {js[gr0, 1, 1, 1, 1, 0, 0, 0]}
gr0 /: MIs[gr0] := {j[gr0, 1, 1, 1, 0, 0, 0, 0], j[gr0, 1, 1, 1, 0, 1, 0, 0], 
   j[gr0, 1, 1, 1, 1, 1, 0, 0]}
gr0 /: NDs[gr0] := 7
gr0 /: NonZeroSectors[gr0] := {js[gr0, 1, 1, 1, 0, 0, 0, 0], 
   js[gr0, 1, 1, 1, 0, 1, 0, 0], js[gr0, 1, 1, 1, 1, 0, 0, 0], 
   js[gr0, 1, 1, 1, 1, 1, 0, 0]}
gr0 /: Parameters[gr0] := {d, pv, qq}
gr0 /: PowerShifts[gr0] := {0, 0, 0, 0, 0, 0, 0}
gr0 /: SectorsMappings[gr0] := {js[gr0, 1, 1, 1, 1, 0, 0, 0] -> 
    js[gr0, 1, 1, 1, 0, 1, 0, 0]}
gr0 /: SectorsPattern[gr0] := {__, 0, 0}
gr0 /: SimpleSectors[gr0] := {js[gr0, 1, 1, 1, 0, 0, 0, 0]}
gr0 /: SPs[gr0] := {sp[l1, l1], sp[l1, l2], sp[l1, p4], sp[l1, q1], 
   sp[l2, l2], sp[l2, p4], sp[l2, q1]}
gr0 /: SR[gr0] := Get[StringJoin[BasisDirectory[gr0], "/SR[gr0]"]]
gr0 /: Toj[gr0] := {sp[l1, l1] -> j[gr0, -1, 0, 0, 0, 0, 0, 0], 
   sp[l1, l2] -> (-qq - j[gr0, -1, 0, 0, 0, 0, 0, 0] - 
      j[gr0, 0, -1, 0, 0, 0, 0, 0] + j[gr0, 0, 0, -1, 0, 0, 0, 0] + 
      2*j[gr0, 0, 0, 0, 0, 0, -1, 0] + 2*j[gr0, 0, 0, 0, 0, 0, 0, -1])/2, 
   sp[l1, p4] -> j[gr0, 0, 0, 0, -1, 0, 0, 0], 
   sp[l1, q1] -> j[gr0, 0, 0, 0, 0, 0, -1, 0], 
   sp[l2, l2] -> j[gr0, 0, -1, 0, 0, 0, 0, 0], 
   sp[l2, p4] -> j[gr0, 0, 0, 0, 0, -1, 0, 0], 
   sp[l2, q1] -> j[gr0, 0, 0, 0, 0, 0, 0, -1]}
gr0 /: UniqueSectors[gr0] := {js[gr0, 1, 1, 1, 0, 0, 0, 0], 
   js[gr0, 1, 1, 1, 0, 1, 0, 0], js[gr0, 1, 1, 1, 1, 1, 0, 0]}
gr0 /: ZerojRule[gr0] := LiteRed`Private`jjj:j[gr0, __] :> 
   0 /; Module[{LiteRed`Private`jjs = 
       Rest[List @@ jSector[LiteRed`Private`jjj]]}, 
     Or @@ (BitOr[LiteRed`Private`jjs, #1] === #1 & ) /@ 
       {{1, 1, 0, 1, 1, 0, 0}, {1, 0, 1, 1, 1, 0, 0}, {0, 1, 1, 1, 1, 0, 0}}]
gr0 /: ZeroSectors[gr0] := {js[gr0, 0, 0, 0, 0, 0, 0, 0], 
   js[gr0, 0, 0, 0, 0, 1, 0, 0], js[gr0, 0, 0, 0, 1, 0, 0, 0], 
   js[gr0, 0, 0, 1, 0, 0, 0, 0], js[gr0, 0, 1, 0, 0, 0, 0, 0], 
   js[gr0, 1, 0, 0, 0, 0, 0, 0], js[gr0, 0, 0, 0, 1, 1, 0, 0], 
   js[gr0, 0, 0, 1, 0, 1, 0, 0], js[gr0, 0, 0, 1, 1, 0, 0, 0], 
   js[gr0, 0, 1, 0, 0, 1, 0, 0], js[gr0, 0, 1, 0, 1, 0, 0, 0], 
   js[gr0, 0, 1, 1, 0, 0, 0, 0], js[gr0, 1, 0, 0, 0, 1, 0, 0], 
   js[gr0, 1, 0, 0, 1, 0, 0, 0], js[gr0, 1, 0, 1, 0, 0, 0, 0], 
   js[gr0, 1, 1, 0, 0, 0, 0, 0], js[gr0, 0, 0, 1, 1, 1, 0, 0], 
   js[gr0, 0, 1, 0, 1, 1, 0, 0], js[gr0, 0, 1, 1, 0, 1, 0, 0], 
   js[gr0, 0, 1, 1, 1, 0, 0, 0], js[gr0, 1, 0, 0, 1, 1, 0, 0], 
   js[gr0, 1, 0, 1, 0, 1, 0, 0], js[gr0, 1, 0, 1, 1, 0, 0, 0], 
   js[gr0, 1, 1, 0, 0, 1, 0, 0], js[gr0, 1, 1, 0, 1, 0, 0, 0], 
   js[gr0, 0, 1, 1, 1, 1, 0, 0], js[gr0, 1, 0, 1, 1, 1, 0, 0], 
   js[gr0, 1, 1, 0, 1, 1, 0, 0]}
gr0 /: SectorsMappings[gr0, LiteRed`Private`ns$:(0 | 1)..] := 
  Cases[SectorsMappings[gr0], HoldPattern[js[gr0, LiteRed`Private`ns$] -> _]]
gr0::usage = "2-loop basis with 2 external momenta.\nUse Information[gr0] to \
get basis summary.\nThis string can be redefined by setting \
gr0::usage=\"\[Ellipsis]\""; Information[gr0, LongForm -> False]; 
LiteRed`Private`CheckDefs[gr0]
BasisDirectory[gr0]
